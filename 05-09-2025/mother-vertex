class Solution {
    
    private void dfs(int v, ArrayList<ArrayList<Integer>> adj, boolean[] visited) {
        visited[v] = true;
        for (int nbr : adj.get(v)) {
            if (!visited[nbr]) {
                dfs(nbr, adj, visited);
            }
        }
    }
    public int findMotherVertex(int V, ArrayList<ArrayList<Integer>> adj) {
        boolean[] visited = new boolean[V];
        int lastV = -1;
        for (int i = 0; i < V; i++) {
            if (!visited[i]) {
                dfs(i, adj, visited);
                lastV = i;
            }
        }
        Arrays.fill(visited, false);
        dfs(lastV, adj, visited);
        
        for (boolean v : visited) {
            if (!v) return -1;
        }
        
        return lastV;
    }
}
